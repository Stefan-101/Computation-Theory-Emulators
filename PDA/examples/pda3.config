#
# PDA Example 2
#
# This PDA accepts strings of form (0^n 1^n @) where n < m
# It's similar to the PDA Example 1 & 2
#

InputSigma:  # alphabet of letters for the input
    0
    1
    @
StackSigma: # alphabet of letters for the stack
    0
    1
States: # set of states
    q1
    q2
    q3
    q4
Start:  # start state
    q1
Final:  # set of final states
    q4
Delta:
    q1,0,epsilon,q1,0
    q1,1,0,q2,epsilon
    q1,1,epsilon,q3,epsilon
    q2,1,0,q2,epsilon
    q2,1,epsilon,q3,epsilon
    q3,1,$,q3,$                 # example of poping and pushing back $ to the stack (equivalent to q3,1,epsilon,q3,epsilon)
    q3,@,epsilon,q4,epsilon
    